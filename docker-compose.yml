version: "3.9"
name: media-stack
services:

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    networks:
        - mynetwork
    environment:
        - LOG_LEVEL=debug
        - TZ=America/Detroit
    ports:
        - 5055:5055
    volumes:
        - type: bind
          source: /usr/local/config/jellyseerr/config
          target: /app/config
    restart: unless-stopped

  # To use/enable VPN, Run this compose file with --profile=vpn. Its highly recommended to use VPN.
  vpn:
  ## Read https://github.com/qdm12/gluetun/wiki for details on configuring VPN for different service providers.
    profiles: ["vpn"]
    container_name: vpn
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn # Valid values: nordvpn, expressvpn, protonvpn, surfshark or custom
      - OPENVPN_USER={NORD_USERNAME_CODE}
      - OPENVPN_PASSWORD={NORD_PASSWORD_CODE}
      ## For list of server countries, visit https://raw.githubusercontent.com/qdm12/gluetun/master/internal/storage/servers.json

      - SERVER_COUNTRIES="United States"

      # - FREE_ONLY=on  # Valid with protonvpn only. Value willbe set "on" if using free subscription provided by protonvpn

      ## Enable below if VPN_SERVICE_PROVIDER=custom
      # - VPN_TYPE=openvpn # or wireguard.

      ## If VPN_TYPE is openvpn
      # - OPENVPN_CUSTOM_CONFIG=/gluetun/custom.conf

      ## If VPN_TYPE is wireguard. Replace below env variables as required.
      # - VPN_ENDPOINT_IP=1.2.3.4                                               # Replace with your wg endpoint ip or domain
      # - VPN_ENDPOINT_PORT=51820                                               # Replace with wg server port
      # - WIREGUARD_PUBLIC_KEY=wAUaJMhAq3NFutLHIdF8AN0B5WG8RndfQKLPTEDHal0=     # Replace with your wg public key
      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=    # Replace with your wg client private key
      # - WIREGUARD_PRESHARED_KEY=xOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=  # Replaced with your wg pre-shared key
      # - WIREGUARD_ADDRESSES="10.64.222.21/32"                                 # Replace with wg address

    ## Enable volume if VPN_SERVICE_PROVIDER=custom and VPN_TYPE=openvpn is used
    # volumes:
      # - /yourpath/yourconfig.conf:/gluetun/config.conf:ro

    networks:
      - mynetwork

    # Uncomment/enable below ports if VPN is used/enabled
    ports:
    #   # qbittorrent ports
        - 5080:5080
        - 6881:6881
        - 6881:6881/udp
    #   # prowlarr ports
        - 9696:9696
    restart: "unless-stopped"

  ## Default credentials of qBittorrent - Username: admin password: adminadmin ##
  ## Change password after install from UI --> Tools --> Options --> WebUI ##
  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:latest

    # Unomment below if vpn is enabled
    depends_on:               # Uncomment this line if vpn is enabled
        - vpn                   # Uncomment this line if vpn is enabled

    # Comment below lines if VPN is enabled
    # networks:               # Comment this line if vpn is enabled
     # - mynetwork           # Comment this line if vpn is enabled

    # Unomment below line if vpn is enabled
    network_mode: service:vpn

    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
      - WEBUI_PORT=5080
    volumes:
      - qbittorrent-config:/config
      - /usr/local/data/torrents:/data/torrents:rw

    ## Comment/Disable below ports if VPN is enabled
    #ports:
     # - 5080:5080
      #- 6881:6881
      #- 6881:6881/udp
    restart: "unless-stopped"

  radarr:
    container_name: radarr
    image: lscr.io/linuxserver/radarr:latest
    networks:
    #  - mynetwork   # Comment this line if VPN is enabled
    ## Uncomment below lines if VPN is enabled
        mynetwork:
            ipv4_address: 172.21.0.6 # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    ports:
      - 7878:7878
    volumes:
      - radarr-config:/config
      - /usr/local/data:/data
    restart: "unless-stopped"

  sonarr:
    image: linuxserver/sonarr:4.0.0-develop
    container_name: sonarr
    networks:
    #  - mynetwork   # Comment this line if VPN is enabled
    ## Uncomment below lines if VPN is enabled
        mynetwork:
            ipv4_address: 172.21.0.4 # It should be available IPv4 address in range of docker network `mynetwork` e.g. 172.20.0.2
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - sonarr-config:/config
      - /usr/local/data:/data
    ports:
      - 8989:8989
    restart: unless-stopped

  prowlarr:
    container_name: prowlarr
    image: linuxserver/prowlarr:latest

    # Uncomment below if vpn is enabled
    depends_on:               # Uncomment this line if vpn is enabled
        - vpn                   # Uncomment this line if vpn is enabled
    network_mode: service:vpn # Uncomment this line if vpn is enabled

    #networks:               # Comment this line if vpn is enabled
    #  - mynetwork           # Comment this line if vpn is enabled
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - prowlarr-config:/config

    # Comment below ports if VPN is enabled.
    #ports:
    #  - 9696:9696
    restart: unless-stopped

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    networks:
      - mynetwork
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=UTC
    volumes:
      - jellyfin-config:/config
      - /usr/local/data/media:/data/media
  # devices:
   #  - /dev/videoN:/dev/videoN # Mount GPU device
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 8920:8920
    restart: unless-stopped

  portainer:
    image: portainer/portainer-ce:latest
    ports:
      - 9443:9443
    volumes:
      - data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped



volumes:
    #torrent-downloads:
    radarr-config:
        driver: local
        driver_opts:
            type: none
            device: "/usr/local/config/radarr/config"
            o: bind
    sonarr-config:
            driver: local
            driver_opts:
                type: none
                device: "/usr/local/config/sonarr/config"
                o: bind
    prowlarr-config:
            driver: local
            driver_opts:
                type: none
                device: "/usr/local/config/prowlarr/config"
                o: bind
    jellyfin-config:
            driver: local
            driver_opts:
                type: none
                device: "/usr/local/config/jellyfin/config"
                o: bind
    qbittorrent-config:
            driver: local
            driver_opts:
                type: none
                device: "/usr/local/config/qBittorrent/config"
                o: bind
    data:

networks:
  mynetwork:
    external: true
